<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Atcoder.JOIOJI</title>
      <link href="/2019/07/29/Atcoder.JOIOJI/"/>
      <url>/2019/07/29/Atcoder.JOIOJI/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>JOIOJI桑是JOI君的叔叔。“JOIOJI”这个名字是由“J、O、I”三个字母各两个构成的。</p><p>最近，JOIOJI桑有了一个孩子。JOIOJI桑想让自己孩子的名字和自己一样由“J、O、I”三个字母构成，并且想让“J、O、I”三个字母的出现次数恰好相同    。</p><p>JOIOJI桑家有一份祖传的卷轴，上面写着一首长诗，长度为N，由“J、O、I”三个字母组成。JOIOJIさん想用诗中最长的满足要求的连续子串作为孩子的名字。</p><p>现在JOIOJI桑将这首长诗交给了你，请你求出诗中最长的、包含同样数目的“J、O、I”三个字母的连续子串。</p><a id="more"></a><p><strong>输入</strong></p><p>第一行一个正整数N，代表这首长诗的长度</p><p>接下来一行一个长度为N的字符串S，表示这首长诗，保证每个字符都是“J、O、I”三个字母中的一个 </p><p>N&lt;=200000</p><p><strong>输出</strong></p><p>输出一行一个正整数，代表最长的包含等数量“J、O、I”三个字母的最长连续子串的长度。如果不存在这样的子串，输出0</p><p><strong>样例输入</strong></p><blockquote><p>10</p><p>JOIIJOJOOI</p></blockquote><p><strong>样例输出</strong></p><blockquote><p>6</p></blockquote><p>同样，2*10^5数据范围 N * N肯定也不可行，考虑别的办法。</p><p>思路参考引自：<a href="https://fighting-naruto.blog.luogu.org/solution-at1224" target="_blank" rel="noopener">https://fighting-naruto.blog.luogu.org/solution-at1224</a></p><p>如果用1，2，3分别代表 J,O,I ，用 si[j] 表示 前 j 个位置有多少个 i ，那么区间[i,j]满足条件有：</p><p>s1[j] - s1[i-1] = s2[j] - s2[i-1] = s3[j] - s3[i-1]</p><p>移项化简</p><p>设s2[i] - s1[i] = x[i] , s3[i] - s1[i] = y[i]，则只要满足x[j]=x[i-1]并且y[j] = y[i-1]就说明区间[i,j]满足条件</p><p><strong>最后只需要找x,y相同的最大的区间[i,j]即可</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,id;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x || (a.x==b.x&amp;&amp;a.y&lt;b.y)|| (a.x==b.x&amp;&amp;a.y==b.y&amp;&amp;a.id&lt;b.id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">maxx</span><span class="params">(ll xx,ll yy)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(xx&gt;yy)&#123;</span><br><span class="line"><span class="keyword">return</span> xx;</span><br><span class="line">&#125;<span class="keyword">return</span> yy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;<span class="comment">//x[i]=s2[i]-s1[i] y[i]=s3[i]-s1[i]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">a[i].id=i;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'J'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x<span class="number">-1</span>;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y<span class="number">-1</span>;</span><br><span class="line">&#125;<span class="keyword">if</span>(ch==<span class="string">'O'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x+<span class="number">1</span>;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y;</span><br><span class="line">&#125;<span class="keyword">if</span>(ch==<span class="string">'I'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(a,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t=a[<span class="number">0</span>].id;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x==a[i<span class="number">-1</span>].x &amp;&amp; a[i].y==a[i<span class="number">-1</span>].y) ans=maxx(ans,a[i].id-t);</span><br><span class="line"><span class="keyword">else</span> t=a[i].id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NowCoder Crazy Binary String</title>
      <link href="/2019/07/29/NowCoder.CrazyBinaryString/"/>
      <url>/2019/07/29/NowCoder.CrazyBinaryString/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>链接：<a href="https://ac.nowcoder.com/acm/contest/883/B" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/883/B</a></p><p>ZYB loves binary strings (strings that only contains <code>0</code> and<code>1</code>’). And he loves equal binary strings more, where the number of <code>0</code>and the number of  <code>1</code> in the string are equal.</p><p> ZYB wants to choose a substring from an original string <code>T</code> so that it is an equal binary stringwith the longest length possible. He also wants to choose a subsequence of  <code>T</code> which meets the same requirements.</p><p> A string  <code>v</code> is a substring of a string <code>w</code> if <code>v</code> is empty, or there are two integers <code>l</code> and <code>r</code> (1≤l≤r≤∣w∣) such that <code>v=wl*wl+1 ⋯wr</code> A string v is a subsequence of a string  <code>w</code>  if it can be derived from w by deleting any number (including zero) of characters without changing the order of the remaining characters. </p><p> For simplicity, you only need to output the maximum possible length. Note that the empty string is both a substring and a subsequence of any string.</p><a id="more"></a><p><strong>输入描述</strong></p><blockquote><p>The first line of the input contains a single integer <code>N</code> (1≤<code>N</code>≤100000)，the length of the original string <code>T</code>. The second line contains a binary string with exactly <code>N</code> characters, the original string  <code>T</code></p></blockquote><p><strong>输出描述</strong></p><blockquote><p>Print two integers <code>A</code> and  <code>B</code>, denoting the answer for substring and subsequence respectively.</p></blockquote><p><strong>示例输入</strong></p><blockquote><p>8</p><p>0100101001</p></blockquote><p><strong>示例输出</strong></p><blockquote><p>4 6</p></blockquote><p>分析这道题目的时候，10^5用N^2的时间复杂度跑一遍肯定会TLE，这时候考虑对前缀和的剪枝操作。</p><p><em>Solve A：map</em></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=y)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=y)&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    k[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="string">'1'</span>)&#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            b++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k.find(a-b)==k.end())&#123; </span><br><span class="line">            k[a-b]=i;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            maxn=max(maxn,i-k[a-b]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;maxn&lt;&lt;<span class="string">" "</span>&lt;&lt;min(a,b)*<span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Solve B：二分</em></p><p>既然只是单纯的找0和1相等的子串情况，二分法可能会更好用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> “前缀和” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NowCoder.Number</title>
      <link href="/2019/07/28/NowCoder.Number/"/>
      <url>/2019/07/28/NowCoder.Number/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>链接：<a href="https://ac.nowcoder.com/acm/contest/884/K" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/884/K</a></p><p>One day he got a string consisted of numbers. He wants to know how many substrings in the string are multiples of 300 when considered as decimal integers. </p><p><strong>Note that leading and trailing zeros are allowed (both in original string and substrings you chose)</strong> and the same substring appearing in different places can be counted multiple times. </p><a id="more"></a><p><strong>输入描述：</strong></p><p>A single line consisting a string consisted of characters ‘0’ to ‘9’.</p><p><strong>输出描述：</strong></p><p>The number of substrings that are multiples of 300 when considered as decimal integers.</p><p><strong>样例输入：</strong></p><blockquote><p>600</p></blockquote><p><strong>样例输出：</strong></p><blockquote><p>4</p></blockquote><p><strong>说明：</strong></p><blockquote><p>‘600’, ‘0’, ‘0’, ‘00’ are multiples of 300. (Note that ‘0’ are counted twice because it appeared two times)</p></blockquote><p><strong>备注：</strong></p><blockquote><p>let the string in the input be s, 1≤∣s∣≤10^5 .</p></blockquote><p><strong>问题分析：</strong></p><p>因为n^2复杂度在10^5条件下肯定会T，所以排除朴素的求前缀和。</p><p>想到二分去做，但是因为要保证子串的有序性，也不可以。</p><p><em>Solve A： O(n)复杂度</em></p><p>这里想到正序和逆序，人工筛选的办法肯定是从后向前筛选，例如333300会先筛选0、0、00、300、3300，33300，333300，在保证00的条件下3333筛了四遍，推广到前缀和的N^2复杂度是肯定不可行的，所以考虑正序——保存前 i 个数正确顺序的条件下，在求第 i + 1 项时直接引用第 i 项的数。</p><p><strong>w[i]为前 i 项的和 mod 3的值，对于长度 &gt;=2 的区间 [l,r] 内 只要 w[ l - 1 ] = w[ r ] 且 w [ r - 1 ] , w [ r ]为 0 即满足</strong></p><p>也就是说，当 s [i] = 0 时，ans+1，当 s [ i - 1 ] == s [ i ]时，ans+= （ i 之前有多少能满足的条件数目）其中 cn [x] 数组代表出现了多少次 mod3 = x的情况，即 i 时刻 cn [ 0 ] 为 i 之前有多少 <em>组</em>  满足能被300整除的组合数。</p><p>你可能会问，为什么不直接写 ans += cn[0]？ 形如78900 w[i]为22222，也就是说不满足前面一串能形成300的倍数的条件时这一串是不被二次计算的。 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxx 100005</span></span><br><span class="line"><span class="keyword">char</span> s[maxx]; <span class="keyword">int</span> n,w[maxx],cn[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>); n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">w[i]=(w[i<span class="number">-1</span>]+s[i])%<span class="number">3</span>;</span><br><span class="line">    </span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'0'</span>)</span><br><span class="line">&#123;</span><br><span class="line">++ans;</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">'0'</span>)</span><br><span class="line">ans+=cn[w[i]];</span><br><span class="line">&#125;</span><br><span class="line">cn[w[i<span class="number">-1</span>]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Solve B：前缀和+剪枝</em></p><p><em>Solve C：动态规划</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> “前缀和” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开博点题</title>
      <link href="/2019/07/26/%E5%BC%80%E5%8D%9A%E7%82%B9%E9%A2%98/"/>
      <url>/2019/07/26/%E5%BC%80%E5%8D%9A%E7%82%B9%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><img src="http://images.cnblogs.com/cnblogs_com/Fylsea/1335321/o_241ac0d9776b0b35a16add96800635c8.jpg" alt="FylSeA"></p><blockquote><p>时间是一切财富中最宝贵的财富。 —— 德奥弗拉斯多</p></blockquote><p>这只是一篇单纯的记录开博的文章，如果你点进来，可能会因为里面并没有写什么而感到失望</p><a id="more"></a><p>开博时间是2019.7.26，第一篇博文的发表是在2019.7.27，历史上的今天例如在公元1214年的今天发生了布汶战役，1789年的今天美国成立了国务院，1837年的今天意大利诗人卡尔杜齐出生，1890年的今天梵高开枪自杀等等。</p><p>但是今天，我的博客创立了。</p><p>虽然对整个世界来说这不是很大的事情，但是我希望几万年之后外星人发现了这一篇博文并且特意将这件事记录在小本本上供后世参考和学习。</p><p>言归正传，我还是要拿这一博客当正经的Code与经验交流来用，如有不当之处欢迎大家指正。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 闲谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
