<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>20200115 VJ训练赛</title>
      <link href="/2020/01/16/20200115%20VJ%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
      <url>/2020/01/16/20200115%20VJ%E8%AE%AD%E7%BB%83%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>测试一下好不好用</p><p><img src="https://images.cnblogs.com/cnblogs_com/Fylsea/1335321/o_2001160157376a6c92d8b177095f2e82d9d7abbbca7d.jpg" alt="FylSeA"></p><p>愉快的Virtual Judge假期训练赛第一场题解报告</p><a id="more"></a><p>重新复盘一下QAQ</p><p><strong>A. Mezo Playing Zoma</strong></p><p><strong>题目描述</strong></p><p>给你一串字符串只包含L和R，从0位置开始可以向左向右走也可以不走，问你最多能到达多少个位置。</p><p><strong>题目解读</strong></p><p>如果给字符串是“L L L”，那么可以选择每一步走或者不走就是-3 -2 -1 0 共4种</p><p>如果给字符串是“R R R”，同理 0 1 2 3 共4种</p><p>如果给字符串是“R L R”，有-1 0 1 2 共4种</p><p>…所以这道题也就是判断LR的数量单独加和最后+1</p><p><strong>B. Just Eat It!</strong></p><p><strong>题目描述</strong></p><p>给你一个数组，数组和为A，一串连续最大字串和为B，问A&gt;=B即输出YES，否则输出NO</p><p><strong>题目解读</strong></p><p>问题就是求解 数组内连续子段最大和 是多少</p><p>首先看看情况都会有哪几种：</p><p>第一种：1 2 3 4 5，连续子段最大和为2+3+4+5</p><p>第二种：1 2 3 4 -1，连续子段最大和为1+2+3+4</p><p>第三种：1 2 3 -1 5，连续子段最大和为2+3+(-1)+5</p><p>第四种：1 1 -2 3 4，连续最大子段和为3+4</p><p>可以看出，如果要寻找[1,n-1]和[2,n]范围内的最大子段和，需要判断x位置之前的和是否小于0，如果小于0那么就要从x+1位置重新开始，两个范围都跑一遍就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">max</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b)<span class="keyword">return</span> b;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,a[<span class="number">100005</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">k+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=<span class="number">0</span>,maxx=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">x+=a[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>) x=<span class="number">0</span>;</span><br><span class="line">maxx=max(maxx,x);</span><br><span class="line">&#125;</span><br><span class="line">x=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">x+=a[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>) x=<span class="number">0</span>;</span><br><span class="line">maxx=max(maxx,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(maxx&lt;k) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>干活去，先写到这</p>]]></content>
      
      
      
        <tags>
            
            <tag> “训练赛” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVA Farey Sums</title>
      <link href="/2019/08/14/UVA%20Farey%20Sums/"/>
      <url>/2019/08/14/UVA%20Farey%20Sums/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><blockquote><p>Given a positive integer, N, the sequence of all fractions a/b with (0 &lt; a ≤ b), (1 &lt; b ≤ N) and a and b relatively prime, listed in increasing order, is called the Farey Sequence of order N.<br>For example, the Farey Sequence of order 6 is:</p><p>*<em>0/1, 1/6, 1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 1/1 *</em></p><p>If the denominators of the Farey Sequence of order N are: b[1], b[2], . . . , b[K]</p><p>then the Farey Sum of order N is the sum of b[i]/b[i + 1] from i = 1 to K—1.<br>For example, the Farey Sum of order 6 is:</p><p>*<em>1/6 + 6/5 + 5/4 + 4/3 + 3/5 + 5/2 + 2/5 + 5/3 + 3/4 + 4/5 + 5/6 + 6/1 = 35/2 *</em></p><p>Write a program to compute the Farey Sum of order N (input).</p></blockquote><a id="more"></a><p><strong>输入</strong></p><blockquote><p>The first line of input contains a single integer P, (1 ≤ P ≤ 10000), which is the number of data sets that follow. Each data set should be processed identically and independently.<br>Each data set consists of a single line of input. It contains the data set number, K, followed by the order N, (2 ≤ N ≤ 10000), of the Farey Sum that is to be computed.</p></blockquote><p><strong>输出</strong></p><blockquote><p>For each data set there is a single line of output. The single output line consists of the data set number,K, followed by a single space followed by the Farey Sum as a decimal fraction in lowest terms. If the denominator is 1, print only the numerator.</p></blockquote><p><strong>样例输入</strong></p><blockquote><p>4<br>1 6<br>2 15<br>3 57<br>4 9999</p></blockquote><p><strong>样例输出</strong></p><blockquote><p>1 35/2<br>2 215/2<br>3 2999/2<br>4 91180457/2</p></blockquote><p>这一道题用模拟会T掉</p><p>正解是运用欧拉函数。</p><p><strong>欧拉函数</strong>是用来计算N前有多少与N互质的数的方法。</p><p>想学习欧拉函数的可以看这里：<a href="https://www.e-learn.cn/content/qita/2190529" target="_blank" rel="noopener">https://www.e-learn.cn/content/qita/2190529</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">10003</span>;</span><br><span class="line"><span class="keyword">int</span> jj[inf];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">euler</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=inf;i++)</span><br><span class="line">        jj[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;inf;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(jj[i]==i)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;inf;j+=i)&#123;</span><br><span class="line">                jj[j]=jj[j]/i*(i<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        jj[i]+=jj[i<span class="number">-1</span>];<span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,x,a[<span class="number">10010</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    euler();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;jj[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;k,&amp;x);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="string">" "</span>&lt;&lt;jj[x]*<span class="number">3</span><span class="number">-1</span>&lt;&lt;<span class="string">"/2"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVA Height Ordering</title>
      <link href="/2019/08/14/UVA%20Height%20Ordering/"/>
      <url>/2019/08/14/UVA%20Height%20Ordering/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><blockquote><p>Mrs. Chambers always has her class line up in height order (shortest at the front of the line). Every September a new class of exactly 20 3rd graders arrive, all of different height. For the first few days it takes a long time to get the kids in height order, since no one knows where they should be in the line.<br>Needless to say, there is quite a bit of jockeying around. This year Mrs. Chambers decided to try a new method to minimize this ordering chaos. One student would be selected to be the first person in line. Then, another student is selected and would find the rst person in the line that is taller than him,and stand in front of that person, thereby causing all the students behind him to step back to make room. If there is no student that is taller, then he would stand at the end of the line. This process continues, one student at-a-time, until all the students are in line, at which point the students will be lined up in height order.<br>For this problem, you will write a program that calculates the total number of steps taken back during the ordering process for a given class of students.</p></blockquote><a id="more"></a><p><strong>输入</strong></p><blockquote><p>The first line of input contains a single integer P, (1 ≤ P ≤ 1000), which is the number of data sets that follow. Each data set should be processed identically and independently.<br>Each data set consists of a single line of input. It contains the data set number, K, followed by 20 non-negative unique integers separated by a single space. The 20 integers represent the height (in millimeters) of each student in the class.</p></blockquote><p><strong>输出</strong></p><blockquote><p>For each data set there is one line of output. The single output line consists of the data set number,K, followed by a single space followed by total number of steps taken back.</p></blockquote><p><strong>样例输入</strong></p><blockquote><p>4<br>1 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919<br>2 919 918 917 916 915 914 913 912 911 910 909 908 907 906 905 904 903 902 901 900<br>3 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 900<br>4 918 917 916 915 914 913 912 911 910 909 908 907 906 905 904 903 902 901 900 919</p></blockquote><p><strong>样例输出</strong></p><blockquote><p>1 0<br>2 190<br>3 19<br>4 17</p></blockquote><p>弧了好久没更新博客..实际上是前几天去考科目二了（险过，丢人）</p><p>这道题第一眼就感觉用upper_bound，就算数据水但是还有打的必要的</p><p>upper_bound的作用就是寻找比较一个vector大数的位置并且返回，这里找一下然后算一下位置求和就好了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; shu;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);    </span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> kk[<span class="number">25</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    s=<span class="number">0</span>;</span><br><span class="line">    shu.clear();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;kk[j]);</span><br><span class="line">    s+=shu.end()-upper_bound(shu.begin(),shu.end(),kk[j]);</span><br><span class="line">    shu.insert(upper_bound(shu.begin(),shu.end(),kk[j]),kk[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,s);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atcoder.JOIOJI</title>
      <link href="/2019/07/29/Atcoder.JOIOJI/"/>
      <url>/2019/07/29/Atcoder.JOIOJI/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>JOIOJI桑是JOI君的叔叔。“JOIOJI”这个名字是由“J、O、I”三个字母各两个构成的。</p><p>最近，JOIOJI桑有了一个孩子。JOIOJI桑想让自己孩子的名字和自己一样由“J、O、I”三个字母构成，并且想让“J、O、I”三个字母的出现次数恰好相同    。</p><p>JOIOJI桑家有一份祖传的卷轴，上面写着一首长诗，长度为N，由“J、O、I”三个字母组成。JOIOJIさん想用诗中最长的满足要求的连续子串作为孩子的名字。</p><p>现在JOIOJI桑将这首长诗交给了你，请你求出诗中最长的、包含同样数目的“J、O、I”三个字母的连续子串。</p><a id="more"></a><p><strong>输入</strong></p><p>第一行一个正整数N，代表这首长诗的长度</p><p>接下来一行一个长度为N的字符串S，表示这首长诗，保证每个字符都是“J、O、I”三个字母中的一个 </p><p>N&lt;=200000</p><p><strong>输出</strong></p><p>输出一行一个正整数，代表最长的包含等数量“J、O、I”三个字母的最长连续子串的长度。如果不存在这样的子串，输出0</p><p><strong>样例输入</strong></p><blockquote><p>10</p><p>JOIIJOJOOI</p></blockquote><p><strong>样例输出</strong></p><blockquote><p>6</p></blockquote><p>同样，2*10^5数据范围 N * N肯定也不可行，考虑别的办法。</p><p>思路参考引自：<a href="https://fighting-naruto.blog.luogu.org/solution-at1224" target="_blank" rel="noopener">https://fighting-naruto.blog.luogu.org/solution-at1224</a></p><p>如果用1，2，3分别代表 J,O,I ，用 si[j] 表示 前 j 个位置有多少个 i ，那么区间[i,j]满足条件有：</p><p>s1[j] - s1[i-1] = s2[j] - s2[i-1] = s3[j] - s3[i-1]</p><p>移项化简</p><p>设s2[i] - s1[i] = x[i] , s3[i] - s1[i] = y[i]，则只要满足x[j]=x[i-1]并且y[j] = y[i-1]就说明区间[i,j]满足条件</p><p><strong>最后只需要找x,y相同的最大的区间[i,j]即可</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,id;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x || (a.x==b.x&amp;&amp;a.y&lt;b.y)|| (a.x==b.x&amp;&amp;a.y==b.y&amp;&amp;a.id&lt;b.id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">maxx</span><span class="params">(ll xx,ll yy)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(xx&gt;yy)&#123;</span><br><span class="line"><span class="keyword">return</span> xx;</span><br><span class="line">&#125;<span class="keyword">return</span> yy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;<span class="comment">//x[i]=s2[i]-s1[i] y[i]=s3[i]-s1[i]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">a[i].id=i;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'J'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x<span class="number">-1</span>;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y<span class="number">-1</span>;</span><br><span class="line">&#125;<span class="keyword">if</span>(ch==<span class="string">'O'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x+<span class="number">1</span>;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y;</span><br><span class="line">&#125;<span class="keyword">if</span>(ch==<span class="string">'I'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x;</span><br><span class="line">a[i].y=a[i<span class="number">-1</span>].y+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(a,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t=a[<span class="number">0</span>].id;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x==a[i<span class="number">-1</span>].x &amp;&amp; a[i].y==a[i<span class="number">-1</span>].y) ans=maxx(ans,a[i].id-t);</span><br><span class="line"><span class="keyword">else</span> t=a[i].id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NowCoder Crazy Binary String</title>
      <link href="/2019/07/29/NowCoder.CrazyBinaryString/"/>
      <url>/2019/07/29/NowCoder.CrazyBinaryString/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>链接：<a href="https://ac.nowcoder.com/acm/contest/883/B" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/883/B</a></p><p>ZYB loves binary strings (strings that only contains <code>0</code> and<code>1</code>’). And he loves equal binary strings more, where the number of <code>0</code>and the number of  <code>1</code> in the string are equal.</p><p> ZYB wants to choose a substring from an original string <code>T</code> so that it is an equal binary stringwith the longest length possible. He also wants to choose a subsequence of  <code>T</code> which meets the same requirements.</p><p> A string  <code>v</code> is a substring of a string <code>w</code> if <code>v</code> is empty, or there are two integers <code>l</code> and <code>r</code> (1≤l≤r≤∣w∣) such that <code>v=wl*wl+1 ⋯wr</code> A string v is a subsequence of a string  <code>w</code>  if it can be derived from w by deleting any number (including zero) of characters without changing the order of the remaining characters. </p><p> For simplicity, you only need to output the maximum possible length. Note that the empty string is both a substring and a subsequence of any string.</p><a id="more"></a><p><strong>输入描述</strong></p><blockquote><p>The first line of the input contains a single integer <code>N</code> (1≤<code>N</code>≤100000)，the length of the original string <code>T</code>. The second line contains a binary string with exactly <code>N</code> characters, the original string  <code>T</code></p></blockquote><p><strong>输出描述</strong></p><blockquote><p>Print two integers <code>A</code> and  <code>B</code>, denoting the answer for substring and subsequence respectively.</p></blockquote><p><strong>示例输入</strong></p><blockquote><p>8</p><p>0100101001</p></blockquote><p><strong>示例输出</strong></p><blockquote><p>4 6</p></blockquote><p>分析这道题目的时候，10^5用N^2的时间复杂度跑一遍肯定会TLE，这时候考虑对前缀和的剪枝操作。</p><p><em>Solve A：map</em></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=y)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=y)&#123;</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    k[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="string">'1'</span>)&#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            b++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k.find(a-b)==k.end())&#123; </span><br><span class="line">            k[a-b]=i;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            maxn=max(maxn,i-k[a-b]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;maxn&lt;&lt;<span class="string">" "</span>&lt;&lt;min(a,b)*<span class="number">2</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Solve B：前缀和</em></p><p>贯彻数学思想的前缀和…这种简单的做法基本换汤不换药，记得归纳总结。</p><p>设s1[i]为前i项0的个数，s2[i]为前i项1的个数，所以[i,j]范围内有0 s1[j]-s1[i-1]个，1 s2[j]-s2[i-1]个。</p><p>列出方程式</p><blockquote><p>s1[j]-s1[i-1] = s2[j]-s2[i-1]</p></blockquote><p>移项得</p><blockquote><p>s1[j]-s2[j] = s1[i-1] - s2[i-1]</p></blockquote><p>设x[i] = s1[i] - s2[i]</p><p>得到当x[j] = x[i-1] 时 满足情况。</p><p>写一个结构体，重新排序一下，然后取 x[j]=x[i-1] 的情况即可（此方法适用于各种前缀和N^2 TLE 求子串含有相同字符的时候）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,id;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x ||  (a.x==b.x&amp;&amp;a.id&lt;b.id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">maxx</span><span class="params">(ll xx,ll yy)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(xx&gt;yy)&#123;</span><br><span class="line"><span class="keyword">return</span> xx;</span><br><span class="line">&#125;<span class="keyword">return</span> yy;</span><br><span class="line">&#125;<span class="function">ll <span class="title">minn</span><span class="params">(ll xx,ll yy)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(xx&gt;yy)&#123;</span><br><span class="line"><span class="keyword">return</span> yy;</span><br><span class="line">&#125;<span class="keyword">return</span> xx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">ll zero=<span class="number">0</span>,one=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">a[i].id=i;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'0'</span>)&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x+<span class="number">1</span>;</span><br><span class="line">zero++;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">a[i].x=a[i<span class="number">-1</span>].x<span class="number">-1</span>;</span><br><span class="line">one++;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sort(a,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t=a[<span class="number">0</span>].id;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x==a[i<span class="number">-1</span>].x) ans=maxx(ans,a[i].id-t);</span><br><span class="line"><span class="keyword">else</span> t=a[i].id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="number">2</span>*minn(zero,one)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NowCoder.Number</title>
      <link href="/2019/07/28/NowCoder.Number/"/>
      <url>/2019/07/28/NowCoder.Number/</url>
      
        <content type="html"><![CDATA[<p><strong>题目描述</strong></p><p>链接：<a href="https://ac.nowcoder.com/acm/contest/884/K" target="_blank" rel="noopener">https://ac.nowcoder.com/acm/contest/884/K</a></p><p>One day he got a string consisted of numbers. He wants to know how many substrings in the string are multiples of 300 when considered as decimal integers. </p><p><strong>Note that leading and trailing zeros are allowed (both in original string and substrings you chose)</strong> and the same substring appearing in different places can be counted multiple times. </p><a id="more"></a><p><strong>输入描述：</strong></p><p>A single line consisting a string consisted of characters ‘0’ to ‘9’.</p><p><strong>输出描述：</strong></p><p>The number of substrings that are multiples of 300 when considered as decimal integers.</p><p><strong>样例输入：</strong></p><blockquote><p>600</p></blockquote><p><strong>样例输出：</strong></p><blockquote><p>4</p></blockquote><p><strong>说明：</strong></p><blockquote><p>‘600’, ‘0’, ‘0’, ‘00’ are multiples of 300. (Note that ‘0’ are counted twice because it appeared two times)</p></blockquote><p><strong>备注：</strong></p><blockquote><p>let the string in the input be s, 1≤∣s∣≤10^5 .</p></blockquote><p><strong>问题分析：</strong></p><p>因为n^2复杂度在10^5条件下肯定会T，所以排除朴素的求前缀和。</p><p>想到二分去做，但是因为要保证子串的有序性，也不可以。</p><p><em>Solve A： O(n)复杂度</em></p><p>这里想到正序和逆序，人工筛选的办法肯定是从后向前筛选，例如333300会先筛选0、0、00、300、3300，33300，333300，在保证00的条件下3333筛了四遍，推广到前缀和的N^2复杂度是肯定不可行的，所以考虑正序——保存前 i 个数正确顺序的条件下，在求第 i + 1 项时直接引用第 i 项的数。</p><p><strong>w[i]为前 i 项的和 mod 3的值，对于长度 &gt;=2 的区间 [l,r] 内 只要 w[ l - 1 ] = w[ r ] 且 w [ r - 1 ] , w [ r ]为 0 即满足</strong></p><p>也就是说，当 s [i] = 0 时，ans+1，当 s [ i - 1 ] == s [ i ]时，ans+= （ i 之前有多少能满足的条件数目）其中 cn [x] 数组代表出现了多少次 mod3 = x的情况，即 i 时刻 cn [ 0 ] 为 i 之前有多少 <em>组</em>  满足能被300整除的组合数。</p><p>你可能会问，为什么不直接写 ans += cn[0]？ 形如78900 w[i]为22222，也就是说不满足前面一串能形成300的倍数的条件时这一串是不被二次计算的。 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxx 100005</span></span><br><span class="line"><span class="keyword">char</span> s[maxx]; <span class="keyword">int</span> n,w[maxx],cn[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>); n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">w[i]=(w[i<span class="number">-1</span>]+s[i])%<span class="number">3</span>;</span><br><span class="line">    </span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'0'</span>)</span><br><span class="line">&#123;</span><br><span class="line">++ans;</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">'0'</span>)</span><br><span class="line">ans+=cn[w[i]];</span><br><span class="line">&#125;</span><br><span class="line">cn[w[i<span class="number">-1</span>]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Solve B：前缀和+剪枝</em></p><p><em>Solve C：动态规划</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开博点题</title>
      <link href="/2019/07/26/%E5%BC%80%E5%8D%9A%E7%82%B9%E9%A2%98/"/>
      <url>/2019/07/26/%E5%BC%80%E5%8D%9A%E7%82%B9%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p><img src="http://images.cnblogs.com/cnblogs_com/Fylsea/1335321/o_241ac0d9776b0b35a16add96800635c8.jpg" alt="FylSeA"></p><blockquote><p>时间是一切财富中最宝贵的财富。 —— 德奥弗拉斯多</p></blockquote><p>这只是一篇单纯的记录开博的文章，如果你点进来，可能会因为里面并没有写什么而感到失望</p><a id="more"></a><p>开博时间是2019.7.26，第一篇博文的发表是在2019.7.27，历史上的今天例如在公元1214年的今天发生了布汶战役，1789年的今天美国成立了国务院，1837年的今天意大利诗人卡尔杜齐出生，1890年的今天梵高开枪自杀等等。</p><p>但是今天，我的博客创立了。</p><p>虽然对整个世界来说这不是很大的事情，但是我希望几万年之后外星人发现了这一篇博文并且特意将这件事记录在小本本上供后世参考和学习。</p><p>言归正传，我还是要拿这一博客当正经的Code与经验交流来用，如有不当之处欢迎大家指正。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 闲谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
